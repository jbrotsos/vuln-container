name: PR Security Check

# Workflow disabled - uncomment to re-enable
# on:
#   pull_request:
#     branches: [ main, master ]

on:
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vulnerable-app:pr-${{ github.event.number }}
        load: true
        
    - name: Run comprehensive Trivy scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'vulnerable-app:pr-${{ github.event.number }}'
        format: 'json'
        output: 'trivy-results.json'
        
    - name: Parse Trivy results
      id: trivy-parse
      run: |
        # Count vulnerabilities by severity
        CRITICAL=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length' trivy-results.json 2>/dev/null || echo "0")
        HIGH=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="HIGH")] | length' trivy-results.json 2>/dev/null || echo "0")
        MEDIUM=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="MEDIUM")] | length' trivy-results.json 2>/dev/null || echo "0")
        LOW=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="LOW")] | length' trivy-results.json 2>/dev/null || echo "0")
        
        echo "critical=$CRITICAL" >> $GITHUB_OUTPUT
        echo "high=$HIGH" >> $GITHUB_OUTPUT
        echo "medium=$MEDIUM" >> $GITHUB_OUTPUT
        echo "low=$LOW" >> $GITHUB_OUTPUT
        
        # Calculate total
        TOTAL=$((CRITICAL + HIGH + MEDIUM + LOW))
        echo "total=$TOTAL" >> $GITHUB_OUTPUT
        
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const critical = '${{ steps.trivy-parse.outputs.critical }}';
          const high = '${{ steps.trivy-parse.outputs.high }}';
          const medium = '${{ steps.trivy-parse.outputs.medium }}';
          const low = '${{ steps.trivy-parse.outputs.low }}';
          const total = '${{ steps.trivy-parse.outputs.total }}';
          
          const body = `## üîç Security Scan Results
          
          **Container Image:** \`vulnerable-app:pr-${{ github.event.number }}\`
          
          ### Vulnerability Summary
          | Severity | Count |
          |----------|-------|
          | üî¥ Critical | ${critical} |
          | üü† High | ${high} |
          | üü° Medium | ${medium} |
          | üîµ Low | ${low} |
          | **Total** | **${total}** |
          
          ${critical > 0 || high > 0 ? '‚ö†Ô∏è **Action Required:** Critical or High severity vulnerabilities detected!' : '‚úÖ No critical or high severity vulnerabilities found.'}
          
          <details>
          <summary>üìã Scan Details</summary>
          
          - **Scanner:** Trivy
          - **Scan Type:** Container Image
          - **Workflow:** ${context.workflow}
          - **Run:** [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          
          </details>
          
          ---
          *This comment was automatically generated by the security scan workflow.*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
          
    - name: Upload scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pr-security-scan-${{ github.event.number }}
        path: trivy-results.json
        retention-days: 14
