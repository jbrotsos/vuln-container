name: Build and Security Scan

# Workflow disabled - uncomment to re-enable
# on:
#   push:
#     branches: [ main, master, develop ]
#   pull_request:
#     branches: [ main, master ]
#   schedule:
#     # Run weekly security scans on Sundays at 2 AM UTC
#     - cron: '0 2 * * 0'
#   workflow_dispatch:

on:
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vulnerable-app:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'vulnerable-app:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      id: upload-sarif
      uses: github/codeql-action/upload-sarif@v3
      if: always() && github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Check if SARIF upload failed
      if: always() && steps.upload-sarif.outcome == 'failure'
      run: |
        echo "⚠️ SARIF upload to Security tab failed. This might be due to:"
        echo "1. Repository permissions (security-events permission needed)"
        echo "2. Repository settings (Advanced Security features might need to be enabled)"
        echo "3. Organization policies"
        echo ""
        echo "✅ Security scan results are still available as artifacts and in the workflow logs."
        
    - name: Run Trivy scanner (JSON format)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'vulnerable-app:latest'
        format: 'json'
        output: 'trivy-results.json'
        
    - name: Run Trivy scanner (Table format for logs)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'vulnerable-app:latest'
        format: 'table'
        
    - name: Upload Trivy scan results as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: trivy-scan-results
        path: |
          trivy-results.sarif
          trivy-results.json
        retention-days: 30
      
  # Separate job for container security best practices scanning
  container-security:
    runs-on: ubuntu-latest
    needs: build-and-scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image for security scan
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: vulnerable-app:security-scan
        load: true
        
    - name: Run Trivy config scan (Dockerfile)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: '.'
        format: 'table'
        
    - name: Run Trivy filesystem scan (vulnerabilities)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        scanners: 'vuln'
        
    - name: Run Trivy filesystem scan (secrets)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        scanners: 'secret'
      continue-on-error: true  # In case secret scanning isn't available in this version
        
    - name: Run Trivy filesystem scan (licenses)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        scanners: 'license'
      continue-on-error: true  # In case license scanning isn't available in this version
